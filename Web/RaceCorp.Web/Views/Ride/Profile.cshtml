@model RaceCorp.Web.ViewModels.Ride.RideProfileVIewModel

@{
    this.ViewData["Title"] = "Ride Profile";
    var url = "https://gpx.studio/?state=%7B%22ids%22:%5B%22" + Model.TraceGpxGoogleDriveId + "%22%5D%7D&embed&distance";
}

@if (this.TempData.ContainsKey("Message"))
{
    <div class="alert alert-success">@this.TempData["Message"]</div>
}

<article class="form-group text-center">
    <header>
        <h1>@Model.Name</h1>
        <a class="btn btn-outline-secondary mb-1" asp-controller="Ride" asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
        <a class="btn btn-outline-secondary mb-1" asp-controller="Ride" asp-action="Delete" asp-route-id="@Model.Id">Delete</a>
        <a class="btn btn-outline-secondary mb-1" asp-controller="Ride" asp-action="DownloadGpx" asp-route-id="@Model.TraceGpxId">Download Gpx file</a>
        <a class="btn btn-outline-secondary mb-1" asp-controller="Ride" asp-action="Register" asp-route-id="@Model.Id">Register for the ride</a>

    </header>
    <div class="container">
        <div class="ratio ratio-16x9">
            <iframe src="@url" frameborder="1"></iframe>
        </div>
        <div class="text-center col-md-6">

            <div class="card-header">
                Overview
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item">Difficulty: @Model.Difficulty</li>
                <li class="list-group-item">Length: @Model.Length km.</li>
                <li class="list-group-item">Control time: @Model.ControlTime h</li>
                <li class="list-group-item">Start time: @Model.StartTime</li>
                <li class="list-group-item">Ride name: @Model.TraceName</li>
            </ul>
        </div>
    </div>
</article>