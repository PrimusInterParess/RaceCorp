@using RaceCorp.Common
@using RaceCorp.Web.ViewModels.ApplicationUsers
@model UserInboxViewModel

<style>
    img {
        border-radius: 30%;
    }
</style>
<div id="divContainer" class="container-messages">
    <h3 class=" text-center">Messaging</h3>
    <div class="messaging">
        <div class="inbox_msg">
            <div class="inbox_people">
                <div class="headind_srch">
                    <div class="recent_heading">
                        <h4>Inbox</h4>
                    </div>
                </div>
                <div class="inbox_chat">
                    @foreach (var conversation in Model.Conversations)
                    {

                        <div class="chat_list active_chat" interlocutorId="@conversation.InterlocutorId" userId="@Model.Id">
                            <div class="chat_people">
                                <div class="chat_img">
                                    <img src="@conversation.UserProfilePicturePath" alt="@conversation.UserFirstName">
                                </div>
                                <div class="chat_ib">
                                    <h5>@conversation.UserFirstName @conversation.UserLastName</h5>
                                    <span>@conversation.LastMessageContent</span>
                                </div>
                            </div>
                            <button class="custom form-control btn btn-outline-info mt-1">Open chat</button>
                        </div>

                    }
                </div>
            </div>
            <div class="mesgs">
                <div class="msg_history">
                    <input type="hidden" class="sender" name="custId" value="@Model.Email">
                    <input type="hidden" class="receiver" name="custId" value="3487">
                    <div class="incoming_msg">
                        <div class="incoming_msg_img"> <img src="@GlobalConstants.RacesCarocelPicture" alt="sunil"> </div>
                        <div class="received_msg">
                            <div class="received_withd_msg">
                                <p>
                                    Test which is a new approach to have all
                                    solutions
                                </p>
                                <span class="time_date"> 11:01 AM    |    June 9</span>
                            </div>
                        </div>
                    </div>
                    <div class="outgoing_msg">
                        <div class="sent_msg">
                            <p>
                                Test which is a new approach to have all
                                solutions
                            </p>
                            <span class="time_date"> 11:01 AM    |    June 9</span>
                        </div>
                    </div>
                </div>
                <div class="type_msg">
                    <div class="input_msg_write">
                        <input type="text" class="write_msg" placeholder="Type a message" />
                        <button class="msg_send_btn" type="button"><i class="fa fa-paper-plane-o" aria-hidden="true"></i></button>
                    </div>
                </div>
            </div>
        </div>



    </div>
</div>

@section Scripts {
    <script>

        var eventElements = document.querySelectorAll(".custom").forEach(e => e.addEventListener("click", (evnt) => {
            evnt.preventDefault();

            let el = evnt.target.parentElement;

            let userId = el.getAttribute('userid');
            let interlocutorID = el.getAttribute('interlocutorid');

            // Create and Send the request
            var fetch_status;
            fetch(`https://localhost:5001/User/Messages?authorId=${userId}&interlocutorId=${interlocutorID}`, {
                method: "GET",
                headers: {
                    "Content-type": "application/json;charset=UTF-8"
                }
            })
                .then(function (response) {
                    // Save the response status in a variable to use later.
                    fetch_status = response.status;
                    // Handle success
                    // eg. Convert the response to JSON and return
                    return response.json();
                })
                .then(function (json) {
                    // Check if the response were success
                    if (fetch_status == 200) {
                        // Use the converted JSON
                        console.log(json);
                    }
                    
                })
                .catch(function (error) {
                    // Catch errors
                    console.log(error);
                });
        }));
    </script>
}