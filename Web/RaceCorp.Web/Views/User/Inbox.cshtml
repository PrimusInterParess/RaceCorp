@using RaceCorp.Common
@using RaceCorp.Web.ViewModels.ApplicationUsers
@model UserInboxViewModel

<style>
    img {
        border-radius: 30%;
    }
</style>
<div id="divContainer" class="container-messages">
    <h3 class=" text-center">Messaging</h3>
    <div class="messaging">
        <div class="inbox_msg">
            <div class="inbox_people">
                <div class="headind_srch">
                    <div class="recent_heading">
                        <h4>Inbox</h4>
                    </div>
                </div>
                <div class="inbox_chat">
                    @foreach (var conversation in Model.Conversations)
                    {

                        <div class="chat_list active_chat" interlocutorId="@conversation.InterlocutorId" userId="@Model.Id">
                            <div class="chat_people">
                                <div class="chat_img">
                                    <a asp-action="Profile" asp-controller="User" asp-area="" asp-route-id="@conversation.InterlocutorId">
                                        <img src="@conversation.UserProfilePicturePath" alt="@conversation.UserFirstName">

                                    </a>
                                </div>
                                <div class="chat_ib">
                                    <h5>@conversation.UserFirstName @conversation.UserLastName</h5>
                                    <span>@conversation.LastMessageContent</span>
                                </div>
                            </div>
                            <button class="custom form-control btn btn-outline-info mt-1">Open chat</button>
                        </div>

                    }
                </div>
            </div>
            <div class="mesgs" id="mesgs">
                <div class="msg_history" id="msg_history">
                </div>`
                <div class="type_msg">
                    <div class="input_msg_write">
                        <input type="text" class="write_msg" id="messageInput" placeholder="Type a message" />
                        <button class="msg_send_btn" id="sendButton" type="button"><i class="fa fa-paper-plane-o" aria-hidden="true"></i></button>
                    </div>
                </div>
            </div>
        </div>



    </div>
</div>


<script src="~/lib/microsoft/signalr/dist/browser/signalr.js"></script>

@section Scripts {
    <script>

        "use strict";

        var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

        //Disable send button until connection is established
        document.getElementById("sendButton").disabled = true;
        let sender;
        let receiver;
        let receiverProfilePicturePath;

        connection.start().then(function () {
            document.getElementById("sendButton").disabled = false;
        }).catch(function (err) {
            return console.error(err.toString());
        });

        document.getElementById("sendButton").addEventListener("click", function (event) {
            event.preventDefault();
            var message = document.getElementById("messageInput").value;

            if (receiver != "") {

                let send = `<div class="outgoing_msg">
                                                                 <div class="sent_msg">
                                                                     <p>
                                                                                 ${message}
                                                                     </p>
                                                                     <span class="time_date"> ${new Date()}</span>
                                                                 </div>
                                                             </div>`

                $("#msg_history").append(send);

                connection.invoke("SendMessageToGroup", sender, receiver, message).catch(function (err) {
                    return console.error(err.toString());
                });
            }
            else {
                connection.invoke("SendMessage", sender, message).catch(function (err) {
                    return console.error(err.toString());
                });
            }

        });

        connection.on("ReceiveMessage", function (user, message) {
            var msg = message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");

            let received = `<div class="incoming_msg">
                            <div class="incoming_msg_img">
                              <img src="${receiverProfilePicturePath}" alt="sunil">
                                            </div>
                                             <div class="received_msg">
                                                 <div class="received_withd_msg">
                                                     <p>
                                                                                ${msg}
                                                     </p>
                                                     <span class="time_date">${new Date()}</span>
                                                 </div>
                                             </div>
                                         </div>`

            $("#msg_history").append(received);

        });


        var eventElements = document.querySelectorAll(".custom").forEach(e => e.addEventListener("click", (evnt) => {
            evnt.preventDefault();

            let el = evnt.target.parentElement;

            let userId = el.getAttribute('userid');
            let interlocutorID = el.getAttribute('interlocutorid');

            // Create and Send the request
            var fetch_status;
            fetch(`https://localhost:5001/User/Messages?authorId=${userId}&interlocutorId=${interlocutorID}`, {
                method: "GET",
                headers: {
                    "Content-type": "application/json;charset=UTF-8"
                }
            })
                .then(function (response) {
                    // Save the response status in a variable to use later.
                    fetch_status = response.status;
                    // Handle success
                    // eg. Convert the response to JSON and return
                    return response.json();
                })
                .then(function (json) {
                    // Check if the response were success
                    if (fetch_status == 200) {
                        // Use the converted JSON

                        sender = json['authorEmail'];
                        receiver = json['interlocutorEmail'];

                        ProcessMessages(json['messages']);

                    }

                })
                .catch(function (error) {
                    // Catch errors
                    console.log(error);
                });
        }));

        function ProcessMessages(messages) {

            document.querySelector('.msg_history').remove();

            var messageHistoryEl = ` <div class="msg_history" id="msg_history">
                            </div>`;

            $("#mesgs").prepend(messageHistoryEl);


            for (const message of messages) {

                let receiverId = message['receiverId'];
                let senderId = message['senderId'];


                if (senderId === '@Model.Id') {
                    GenerateSendMessageElement(message);
                }
                else {
                    GenerateReceivedMessageElement(message);
                }

                function GenerateSendMessageElement(message) {

                    let messageId = message['id'];
                    let senderId = message['senderId'];

                    let content = message['content'];
                    let createdOn = message['createdOn'];


                    let sendMessageEl = `<div class="outgoing_msg">
                                                         <div class="sent_msg">
                                                             <p>
                                                                 ${content}
                                                             </p>
                                                             <span class="time_date"> ${createdOn}</span>
                                                         </div>
                                                     </div>`

                    $("#msg_history").append(sendMessageEl);
                }

                function GenerateReceivedMessageElement(message) {

                    let messageId = message['id'];
                    let senderId = message['senderId'];
                    let senderFirstName = message['senderFirstName'];
                    let senderLastName = message['senderLastName'];
                    let senderProfilePicturePath = message['senderProfilePicturePath'];
                    receiverProfilePicturePath = message['senderProfilePicturePath'];
                    let content = message['content'];
                    let createdOn = message['createdOn'];

                    let receivedMessageEl = `<div class="incoming_msg"> <div class="incoming_msg_img">
                                                                                    <img src="${senderProfilePicturePath}" alt="sunil">
                                                                                    </div>
                                                                            <div class="received_msg">
                                                                                <div class="received_withd_msg">
                                                                                    <p>
                                                                                               ${content}
                                                                                    </p>
                                                                                    <span class="time_date">${createdOn}</span>
                                                                                </div>
                                                                               </div>
                                                                           </div>`

                    $("#msg_history").append(receivedMessageEl);
                }
            }

        }


    </script>
                }
